// <auto-generated />
using System;
using Booble_IA_API._3___Repository.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Booble_IA_API.Migrations
{
    [DbContext(typeof(BoobleContext))]
    [Migration("20250815145838_CorFrequenciaHabitoIconeFrequenciaPersonalizada")]
    partial class CorFrequenciaHabitoIconeFrequenciaPersonalizada
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Booble_IA_API._3___Repository.Entities.Amizade", b =>
                {
                    b.Property<int>("Idf_Amizade")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("Idf_Amizade");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Idf_Amizade"));

                    b.Property<DateTime>("Dta_Cadastro")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("Dta_Cadastro")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<bool>("Flg_Aceito")
                        .HasColumnType("boolean")
                        .HasColumnName("Flg_Aceito");

                    b.Property<bool>("Flg_Inativo")
                        .HasColumnType("boolean")
                        .HasColumnName("Flg_Inativo");

                    b.Property<int>("Idf_Usuario_Recebedor")
                        .HasColumnType("integer")
                        .HasColumnName("Idf_Usuario_Recebedor");

                    b.Property<int>("Idf_Usuario_Solicitante")
                        .HasColumnType("integer")
                        .HasColumnName("Idf_Usuario_Solicitante");

                    b.HasKey("Idf_Amizade");

                    b.ToTable("TAB_Amizade", (string)null);
                });

            modelBuilder.Entity("Booble_IA_API._3___Repository.Entities.Cor", b =>
                {
                    b.Property<int>("Idf_Cor")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("Idf_Cor");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Idf_Cor"));

                    b.Property<string>("Des_Cor")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)")
                        .HasColumnName("Des_Cor");

                    b.HasKey("Idf_Cor");

                    b.ToTable("TAB_Cor", (string)null);
                });

            modelBuilder.Entity("Booble_IA_API._3___Repository.Entities.Frequencia", b =>
                {
                    b.Property<int>("Idf_Frequencia")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("Idf_Frequencia");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Idf_Frequencia"));

                    b.Property<string>("Des_Frequencia")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("Des_Frequencia");

                    b.HasKey("Idf_Frequencia");

                    b.ToTable("TAB_Frequencia", (string)null);
                });

            modelBuilder.Entity("Booble_IA_API._3___Repository.Entities.FrequenciaPersonalizada", b =>
                {
                    b.Property<int>("Idf_Frequencia_Personalizada")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("Idf_Frequencia_Personalizada");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Idf_Frequencia_Personalizada"));

                    b.Property<int>("Des_Frequencia_Personalizada")
                        .HasColumnType("integer")
                        .HasColumnName("Des_Frequencia_Personalizada");

                    b.Property<DateTime>("Dta_Cadastro")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("Dta_Cadastro")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("Dta_Frequencias")
                        .IsRequired()
                        .HasColumnType("jsonb")
                        .HasColumnName("Dta_Frequencias");

                    b.Property<int>("Idf_Frequencia")
                        .HasColumnType("integer")
                        .HasColumnName("Idf_Frequencia");

                    b.HasKey("Idf_Frequencia_Personalizada");

                    b.ToTable("TAB_Frequencia_Personalizada", (string)null);
                });

            modelBuilder.Entity("Booble_IA_API._3___Repository.Entities.Habito", b =>
                {
                    b.Property<int>("Idf_Habito")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("Idf_Habito");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Idf_Habito"));

                    b.Property<string>("Des_Cor")
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)")
                        .HasColumnName("Des_Cor");

                    b.Property<string>("Des_Descricao")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)")
                        .HasColumnName("Des_Descricao");

                    b.Property<string>("Des_Habito")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("Des_Habito");

                    b.Property<string>("Des_Icone")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("Des_Icone");

                    b.Property<string>("Des_Titulo")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("Des_Titulo");

                    b.Property<DateTime>("Dta_Cadastro")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("Dta_Cadastro")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("Dta_Conclusoes")
                        .HasColumnType("jsonb")
                        .HasColumnName("Dta_Conclusoes");

                    b.Property<bool>("Flg_Concluido")
                        .HasColumnType("boolean")
                        .HasColumnName("Flg_Concluido");

                    b.Property<bool?>("Flg_Timer")
                        .HasColumnType("boolean")
                        .HasColumnName("Flg_Timer");

                    b.Property<int>("Idf_Frequencia")
                        .HasColumnType("integer")
                        .HasColumnName("Idf_Frequencia");

                    b.Property<int>("Idf_Usuario")
                        .HasColumnType("integer")
                        .HasColumnName("Idf_Usuario");

                    b.Property<int>("Num_Xp")
                        .HasColumnType("integer")
                        .HasColumnName("Num_Xp");

                    b.Property<decimal?>("Timer_Duracao")
                        .HasPrecision(10, 2)
                        .HasColumnType("numeric(10,2)")
                        .HasColumnName("Timer_Duracao");

                    b.HasKey("Idf_Habito");

                    b.HasIndex("Des_Cor");

                    b.HasIndex("Des_Icone");

                    b.HasIndex("Idf_Frequencia");

                    b.HasIndex("Idf_Usuario");

                    b.ToTable("TAB_Habito", (string)null);
                });

            modelBuilder.Entity("Booble_IA_API._3___Repository.Entities.HabitoIcone", b =>
                {
                    b.Property<int>("Idf_Habito_Icone")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("Idf_Habito_Icone");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Idf_Habito_Icone"));

                    b.Property<string>("Des_Habito_Icone")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("Des_Habito_Icone");

                    b.HasKey("Idf_Habito_Icone");

                    b.ToTable("TAB_Habito_Icone", (string)null);
                });

            modelBuilder.Entity("Booble_IA_API._3___Repository.Entities.RankingStreakDTO", b =>
                {
                    b.Property<string>("Des_Nme")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Idf_Usuario")
                        .HasColumnType("integer");

                    b.Property<int>("MaxStreak")
                        .HasColumnType("integer");

                    b.ToTable("RankingStreaks");
                });

            modelBuilder.Entity("Booble_IA_API._3___Repository.Entities.Usuario", b =>
                {
                    b.Property<int>("Idf_Usuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("Idf_Usuario");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Idf_Usuario"));

                    b.Property<string>("Des_Email")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("character varying(150)")
                        .HasColumnName("Des_Email");

                    b.Property<string>("Des_Nme")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("Des_Nme");

                    b.Property<DateTime>("Dta_Alteracao")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("Dta_Alteracao");

                    b.Property<DateTime>("Dta_Cadastro")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("Dta_Cadastro")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<DateTime>("Dta_Nascimento")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("Flg_Sexo")
                        .HasColumnType("boolean")
                        .HasColumnName("Flg_Sexo");

                    b.Property<string>("Num_Telefone")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("character varying(15)")
                        .HasColumnName("Num_Telefone");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("Senha");

                    b.HasKey("Idf_Usuario");

                    b.ToTable("TAB_Usuario", (string)null);
                });

            modelBuilder.Entity("Booble_IA_API._3___Repository.Entities.Habito", b =>
                {
                    b.HasOne("Booble_IA_API._3___Repository.Entities.Cor", "Cor")
                        .WithMany()
                        .HasForeignKey("Des_Cor")
                        .HasPrincipalKey("Des_Cor")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Booble_IA_API._3___Repository.Entities.HabitoIcone", "HabitoIcone")
                        .WithMany()
                        .HasForeignKey("Des_Icone")
                        .HasPrincipalKey("Des_Habito_Icone")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Booble_IA_API._3___Repository.Entities.Frequencia", "Frequencia")
                        .WithMany()
                        .HasForeignKey("Idf_Frequencia")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Booble_IA_API._3___Repository.Entities.FrequenciaPersonalizada", "FrequenciaPersonalizada")
                        .WithMany()
                        .HasForeignKey("Idf_Frequencia")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Booble_IA_API._3___Repository.Entities.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("Idf_Usuario")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Cor");

                    b.Navigation("Frequencia");

                    b.Navigation("FrequenciaPersonalizada");

                    b.Navigation("HabitoIcone");

                    b.Navigation("Usuario");
                });
#pragma warning restore 612, 618
        }
    }
}
